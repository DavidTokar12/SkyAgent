[tool.poetry]
name = "skyagent"
version = "0.1.0"
description = ""
authors = ["David Tokar <1413david@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"	
openai = "^1.58.1"
pydantic = "^2.10.4"
docstring-parser = "^0.16"
rich = "^13.9.4"
anthropic = "^0.43.0"
pexpect = "^4.9.0"
googlesearch-python = "^1.3.0"
html2text = "^2024.2.26"
identify = "^2.6.7"
pandas = "^2.2.3"
pillow = "^11.1.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.2"
mypy = "^1.13.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.25.3"
vcrpy = "^7.0.0"
black = "^25.1.0"
python-dotenv = "^1.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = [
    "docs/",
    "test/",
]
fix = true
line-length = 88
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "ERA001",
    "RUF009", # Do not perform function call in dataclass defaults
]
extend-safe-fixes = [
    "TCH", # move import from and to TYPE_CHECKING blocks
]
unfixable = [
    "ERA", # do not autoremove commented out code
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry"]
known-third-party = ["poetry.core"]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
files = "src, tests"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
strict = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
exclude = [
    "docs/",
    "test/",
    "assets/"
]


[tool.pytest.ini_options]
pythonpath = ["src"]
minversion = "6.0"
addopts = "-ra -q -s"
testpaths = ["tests"]



